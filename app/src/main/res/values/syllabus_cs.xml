<?xml version="1.0" encoding="utf-8"?>
<resources>
    <array name="cs201">
        <item>DCS</item>
        <item>Review, Relations and Functions of Sets</item>
        <item>Review of elementary set theory :
            Algebra of sets – Ordered pairs and Cartesian products –
            Countable and Uncountable sets,\n
            Relations :-
            Relations on sets –Types of relations and their properties –
            Relational matrix and the graph of a relation – Partitions –
            Equivalence relations - Partial ordering- Posets – Hasse
            diagrams - Meet and Join – Infimum and Supremum.\n
            Functions :-
            Injective, Surjective and Bijective functions - Inverse of a
            function- Composition.
        </item>
        <item>Recurrance Relations and Algebraic Systems</item>
        <item>Review of Permutations and combinations, Principle of
            inclusion exclusion, Pigeon Hole Principle.\n
            Recurrence Relations:
            Introduction- Linear recurrence relations with constant
            coefficients– Homogeneous solutions – Particular solutions –
            Total solutions.\n
            Algebraic systems:-
            Semigroups and monoids - Homomorphism, Subsemigroups
            and submonoids.
        </item>
        <item>Algebraic systems (contd…)</item>
        <item>Groups, definition and elementary properties, subgroups,
            Homomorphism and Isomorphism, Generators - Cyclic Groups,
            Cosets and Lagrange’s Theorem.\n
            Algebraic systems with two binary operations- rings, fields-sub
            rings, ring homomorphism.
        </item>
        <item>Lattices and Boolean algebra</item>
        <item>Lattices –Sublattices – Complete lattices – Bounded Lattices -
            Complemented Lattices – Distributive Lattices – Lattice
            Homomorphisms.\n
            Boolean algebra – sub algebra, direct product and
            homomorphisms.
        </item>
        <item>Propositional Logic</item>
        <item>Propositions – Logical connectives – Truth tables
            Tautologies and contradictions – Contra positive – Logical equivalences and
            implications.\n
            Rules of inference: Validity of arguments.
        </item>

        <item>Predicate Logic and Proof Techniques</item>
        <item>Predicate Logic:-
            Predicates – Variables – Free and bound variables – Universal and Existential
            Quantifiers – Universe of discourse.
            Logical equivalences and implications for quantified statements – Theory of inference :
            Validity of arguments.\n
            Proof techniques:
            Mathematical induction and its variants – Proof by Contradiction – Proof by Counter
            Example – Proof by Contra positive.
        </item>
    </array>


    <array name="cs202">
        <item>COA</item>
        <item>Basic Structure of computers</item>
        <item>Functional units –basic operational concepts –bus structures –software. Memory
            locations and addresses – memory operations – instructions and instruction sequencing –
            addressing modes – ARM Example (programs not required). Basic I/O operations – stacks
            subroutine calls.
        </item>
        <item>Basic processing unit and Arithmetic algorithms</item>
        <item>Basic processing unit – fundamental concepts – instruction cycle - execution of a
            complete instruction –multiple- bus organization – sequencing of control signals.\n
            Arithmetic algorithms: Algorithms for multiplication and division of binary and BCD
            numbers — array multiplier —Booth’s multiplication algorithm — restoring and
            non-restoring division — algorithms for floating point, multiplication and division.
        </item>
        <item>I/O organization</item>
        <item>Accessing of I/O devices –interrupts –direct memory access –buses –interface circuits
            –standard I/O interfaces (PCI, SCSI, USB).
        </item>
        <item>Memory system</item>
        <item>Basic concepts –semiconductor RAMs –memory system considerations –semiconductor ROMs
            –flash memory –cache memory and mapping functions.
        </item>
        <item>Processor Logic Design and Processor organization</item>
        <item>Processor Logic Design: Register transfer logic –inter register transfer – arithmetic,
            logic and shift micro operations –conditional control statements.\n
            Processor organization:–design of arithmetic unit, logic unit, arithmetic logic unit and
            shifter –status register –processor unit –design of accumulator.
        </item>
        <item>Control Logic Design and Micro-programmed control</item>
        <item>Control Logic Design: Control organization –design of hardwired control –control of
            processor unit –PLA control. \nMicro-programmed control: Microinstructions –horizontal
            and vertical micro instructions – micro-program sequencer –micro programmed CPU
            organization.
        </item>
    </array>


    <array name="cs203">
        <item>STLD</item>
        <item>Number Systems</item>
        <item>Number systems – Decimal, Binary, Octal and
            Hexadecimal – conversion from one system to another –
            representation of negative numbers – representation of
            BCD numbers – character representation – character
            coding schemes – ASCII – EBCDIC etc.\n
            Addition, subtraction, multiplication and division of
            binary numbers (no algorithms). Addition and subtraction
            of BCD, Octal and Hexadecimal numbers.\n
            Representation of floating point numbers – precision –
            addition, subtraction, multiplication and division of
            floating point numbers.
        </item>
        <item></item>
        <item>Introduction — Postulates of Boolean algebra – Canonical
            and Standard Forms — logic functions and gates.\n
            methods of minimization of logic functions — Karnaugh
            map method and QuinMcClusky method.\n
            Product-of-Sums Simplification — Don’t-Care
            Conditions.
        </item>
        <item>Combination Logic</item>
        <item>Combinational Logic: combinational Circuits and design
            Procedure — binary adder and subtractor — multi—level
            NAND and NOR circuits — Exclusive-OR and
            Equivalence Functions.\n
            Implementation of combination logic: parallel adder,
            carry look ahead adder, BCD adder, code converter,
            magnitude comparator, decoder, multiplexer, demultiplexer,
            parity generator.
        </item>
        <item>Sequential Circuits</item>
        <item>Sequential logic circuits: latches and flip-flops – edgetriggering
            and level-triggering — RS, JK, D and T flipflops
            — race condition — master-slave flip-flop.\n
            Clocked sequential circuits: state diagram — state
            reduction and assignment — design with state equations.
        </item>
        <item>Registers and Counters</item>
        <item>Registers: registers with parallel load - shift registers
            universal shift registers – application: serial adder.\n
            Counters: asynchronous counters — binary and BCD
            ripple counters — timing sequences — synchronous
            counters — up-down counter, BCD counter, Johnson
            counter — timing sequences and state diagrams.
        </item>
        <item>Memory, Programmable Logic and Arithmatic Algorithms</item>
        <item>Memory and Programmable Logic: Random-Access Memory (RAM)—Memory Decoding—Error
            Detection and Correction — Read only Memory (ROM), Programmable Logic Array (PLA).\n
            HDL: fundamentals, combinational logic, adder, multiplexer.\n
            Arithmetic algorithms: Algorithms for addition and subtraction of binary and BCD
            numbers, algorithms for floating point addition and subtraction.
        </item>
    </array>


    <array name="cs204">
        <item>Operating Systems</item>
        <item>Introduction, Operating System Interfaces and
            implementation
        </item>
        <item>Introduction: Functions of an operating system.
            Single processor, multiprocessor and clustered
            systems – overview. Kernel Data Structures –
            Operating Systems used in different computing
            environments.\n
            Operating System Interfaces and
            implementation - User Interfaces, System Calls –
            examples. Operating System implementation -
            approaches. Operating System Structure –
            Monolithic, Layered, Micro-kernel, Modular.
            System Boot process.
        </item>
        <item>Process Management and Inter Process Communication</item>
        <item>Process Management: Process Concept –
            Processes-States – Process Control Block –
            Threads. Scheduling – Queues – Schedulers –
            Context Switching. Process Creation and
            Termination.\n
            Inter Process Communication: Shared Memory,
            Message Passing, Pipes.
        </item>
        <item>Process Synchronization</item>
        <item>Critical Section-
            Peterson\'s solution. Synchronization – Locks,
            Semaphores, Monitors, Classical Problems –
            Producer Consumer, Dining Philosophers and
            Readers-Writers Problems
        </item>
        <item>CPU Scheduling and Deadlocks</item>
        <item>CPU Scheduling – Scheduling Criteria –
            Scheduling Algorithms.\n
            Deadlocks – Conditions, Modeling using graphs.
            Handling – Prevention – Avoidance – Detection-
            Recovery.
        </item>
        <item>Memory Management</item>
        <item>Main Memory – Swapping
            – Contiguous Memory allocation – Segmentation –
            Paging – Demand paging.
        </item>
        <item>Storage Management, File System Interface and Protection</item>
        <item>Storage Management: Overview of mass storage
            structure- disks and tapes. Disk structure –
            accessing disks. Disk scheduling and management.
            Swap Space.\n
            File System Interface: File Concepts – Attributes –
            operations – types – structure – access methods.
            File system mounting. Protection. File system
            implementation. Directory implementation –
            allocation methods. Free space Management.\n
            Protection– Goals, Principles, Domain. Access
            Matrix.
        </item>
    </array>

    <array name="cs205">
        <item>DS</item>
        <item>Introduction to programming methodologies</item>
        <item>Structured approach, stepwise refinement techniques, programming style, documentation
            – analysis of algorithms: frequency count, definition of Big O notation, asymptotic
            analysis of simple algorithms. Recursive and iterative algorithms.
        </item>
        <item>Abstract and Concrete Data Structures</item>
        <item>Basic data structures – vectors and arrays. Applications, Linked lists:- singly linked
            list, doubly linked list, Circular linked list, operations on linked list, linked list
            with header nodes, applications of linked list: polynomials.
        </item>
        <item>Applications of linked list (continued)</item>
        <item>Memory management, memory allocation and de-allocation. First-fit, best-fit and
            worst-fit allocation schemes.\nImplementation of Stacks and Queues using arrays and
            linked list, DEQUEUE (double ended queue). Multiple Stacks and Queues, Applications.
        </item>
        <item>String and Trees</item>
        <item>String: - representation of strings, concatenation, substring searching and
            deletion.\nTrees: - m-ary Tree, Binary Trees – level and height of the tree,
            complete-binary tree representation using array, tree traversals (Recursive and
            non-recursive), applications. Binary search tree – creation, insertion and deletion and
            search operations, applications.
        </item>
        <item>Graphs and Sorting Techniques</item>
        <item>Graphs – representation of graphs, BFS and DFS (analysis not required)
            applications.\nSorting techniques – Bubble sort, Selection Sort, Insertion sort, Merge
            sort, Quick sort, Heaps and Heap sort. Searching algorithms (Performance comparison
            expected. Detailed analysis not required)
        </item>
        <item>Search and Hash Tables</item>
        <item>Linear and Binary search. (Performance comparison expected. Detailed analysis not
            required).\nHash Tables – Hashing functions – Mid square, division, folding, digit
            analysis, collusion resolution and Overflow handling techniques.
        </item>
    </array>


    <array name="cs206">
        <item>OODP</item>
        <item>OOP and Java Overview</item>
        <item>Object oriented concepts, Object oriented systems development life cycle. Unified
            Modeling Language, UML class diagram, Use-case diagram.\n
            Java Overview: Java virtual machine, data types, operators, control statements,
            Introduction to Java programming.
        </item>
        <item>Classes</item>
        <item>Classes fundamentals, objects, methods, constructors, parameter passing, overloading,
            access control keywords.
        </item>
        <item>Inheritance and Exception Handling</item>
        <item>Inheritance basics, method overriding, abstract classes, interface. Defining and
            importing packages. Exception handling fundamentals, multiple catch and nested try
            statements.
        </item>
        <item>Input/Output</item>
        <item>Input/Output: files, stream classes, reading console input. Threads: thread model, use
            of Thread class and Runnable interface, thread synchronization, multithreading.
        </item>
        <item>String Class and Applets</item>
        <item>String class - basics.\n
            Applet basics and methods. Event Handling: delegation event model, event classes,
            sources, listeners.
        </item>
        <item>Introduction to AWT</item>
        <item>Introduction to AWT: working with frames, graphics, color, font. AWT Control
            fundamentals. Swing overview. Java database connectivity: JDBC overview, creating and
            executing queries, dynamic queries.
        </item>
    </array>

    <array name="cs207">
        <item>EDC</item>
        <item>Wave shaping circuits</item>
        <item>Wave shaping circuits: Sinusoidal and non-sinusoidal wave shapes, Principle and
            working of RC differentiating and integrating circuits, Conversion of one non-sinusoidal
            wave shape into another.\n
            Clipping circuits - Positive, negative and biased clipper.\nClamping circuits -
            Positive, negative and biased clamper.
            Voltage multipliers- Voltage doubler and tripler.\n
            Simple sweep circuit using transistor as a switch.
        </item>
        <item>Regulated power supplies and Filed Effect Transistors</item>
        <item>Regulated power supplies: Review of simple zener voltage
            regulator, Shunt and series voltage regulator using transistors,
            Current limiting and fold back protection, 3 pin regulators-78XX
            and 79XX, IC 723 and its use as low and high voltage regulators,
            DC to DC conversion, Circuit/block diagram and working of
            SMPS.\nField effect transistors: JFET – Structure, principle of
            operation and characteristics, Comparison with BJT.
            MOSFET- Structure, Enhancement and Depletion types,
            principle of operation and characteristics.
        </item>
        <item>Amplifiers</item>
        <item>Introduction to transistor biasing, operating point,
            concept of load line, thermal stability, fixed bias, self bias,
            voltage divider bias. Classification of amplifiers, RC coupled
            amplifier - voltage gain and frequency response. Multistage
            amplifiers - effect of cascading on gain and bandwidth.\n
            Feedback in amplifiers - Effect of negative feedback on
            amplifiers.\n
            MOSFET Amplifier- Circuit diagram and working of common
            source MOSFET amplifier.
        </item>
        <item>Oscillators</item>
        <item>Classification, criterion for oscillation, analysis of
            Wien bridge oscillator, Hartley and Crystal oscillator.\n
            Non-sinusoidal oscillators: Astable, monostable and bi-stable
            multivibrators using transistors (Only design equations and
            working of circuit are required, Analysis not required).
        </item>
        <item>Operational amplifiers</item>
        <item>Differential amplifier, characteristics
            of op-amps(gain, bandwidth, slew rate, CMRR, offset voltage,
            offset current), comparison of ideal and practical opamp(
            IC741), applications of op-amps- scale changer, sign
            changer, adder/summing amplifier, subtractor, integrator,
            differentiator,
            Schmitt trigger, Wien bridge oscillator.
        </item>

        <item>Integrated circuits</item>
        <item>Active filters – Low pass and high pass (first and second order) active filters using
            op-amp with gain (No analysis required).
            D/A and A/D convertors – important specifications, Sample and hold circuit.\n
            Binary weighted resistor and R-2R ladder type D/A convertors. (concepts only).\n
            Flash, dual slope and successive approximation type A/D convertors.\n
            Circuit diagram and working of Timer IC555, astable and monostablemultivibrators using
            555.
        </item>
    </array>

    <array name="cs208">
        <item>PDD</item>
        <item>Introduction and Entity-Relationship Model</item>
        <item>Introduction: Data: structured, semi-structured and unstructured data, Concept and
            Overview of DBMS, Data Models, Database Languages, Database Administrator, Database
            Users, Three Schema architecture of DBMS. Database architectures and classification.
            (Reading: ElmasriNavathe, Ch. 1 and 2. Additional Reading: Silbershatz, Korth, Ch. 1)
            Entity-Relationship Model: Basic concepts, Design Issues, Mapping Constraints,Keys,
            Entity-Relationship Diagram, Weak Entity Sets,
            Relationships of degree greater than 2 (Reading:
            ElmasriNavathe, Ch. 7.1-7.8).
        </item>
        <item>Relational Model and Database Languages</item>
        <item>Relational Model: Structure of relational Databases,
            Integrity Constraints, synthesizing ER diagram to
            relational schema (Reading: ElmasriNavathe, Ch. 3 and
            8.1, Additional Reading: Silbershatz, Korth, Ch. 2.1-
            2.4)\n Database Languages: Concept of DDL and DML
            relational algebra (Reading: Silbershatz, Korth, Ch
            2.5-2.6 and 6.1-6.2, ElmasriNavathe, Ch. 6.1-6.5)
        </item>
        <item>Structured Query Language (SQL)</item>
        <item>Structured Query Language (SQL): Basic SQL
            Structure, examples, Set operations, Aggregate
            Functions, nested sub-queries (Reading:
            ElmasriNavathe, Ch. 4 and 5.1)\n Views, assertions and
            triggers (Reading: ElmasriNavathe, Ch. 5.2-5.3,
            Silbershatz, Korth Ch. 5.3).\n Functions, Procedures
            and HLL interfaces (Reading: Silbershatz, Korth Ch.
            5.1-5.2).
        </item>
        <item>Relational Database Design</item>
        <item>Different anomalies in
            designing a database, normalization, functional
            dependency (FD), Armstrong’s Axioms, closures,
            Equivalence of FDs, minimal Cover (proofs not
            required). Normalization using functional dependencies,
            INF, 2NF, 3NF and BCNF, lossless and dependency
            preserving decompositions (Reading: Elmasri and
            Navathe, Ch. 14.1-14.5, 15.1-15.2. Additional Reading:
            Silbershatz, Korth Ch. 8.1-8.5).
        </item>
        <item>Physical Data Organization and Query Optimization</item>
        <item>Physical Data Organization: index structures, primary,
            secondary and clustering indices, Single level and
            Multi-level indexing, B-Trees and B+-Trees (basic
            structure only, algorithms not needed), Indexing on
            multiple keys (Reading Elmasri and Navathe, Ch. 17.1-
            17.4)\n Query Optimization: algorithms for relational
            algebra operations, heuristics-based query optimization,
            Cost-based query optimization (Reading Elmasri and
            Navathe, Ch. 18.1-18.3, 18.6-18.8)
        </item>
        <item>Transaction Processing Concepts</item>
        <item>overview of
            concurrency control and recovery acid properties, serial
            and concurrent schedules, conflict serializability. Twophase
            locking, failure classification, storage structure,
            stable storage, log based recovery, deferred database modification, check-pointing,
            (Reading Elmasri and Navathe, Ch. 20.1-20.5 (except 20.5.4-20.5.5) , Silbershatz, Korth
            Ch. 15.1 (except 15.1.4-15.1.5), Ch. 16.1 – 16.5) Recent topics (preliminary ideas
            only): Semantic Web and RDF(Reading: Powers Ch.1, 2), GIS, biological databases
            (Reading: Elmasri and Navathe Ch. 23.3-23.4) Big Data (Reading: Plunkett and Macdonald,
            Ch. 1, 2)
        </item>
    </array>

    <array name="cs301">

        <item>TOC</item>

        <item></item>
        <item>Introduction to Automata Theory and its significance. Type 3
            Formalism: Finite state automata – Properties of transition functions, Designing finite
            automata, NFA, Finite Automata with Epsilon Transitions, Equivalence of NFA and DFA,
            Conversion of NFA to
            DFA, Equivalence and Conversion of NFA with and without Epsilon
            Transitions.
        </item>

        <item></item>
        <item>Myhill-Nerode Theorem, Minimal State FA Computation. Finite
            State Machines with Output- Mealy and Moore machine (Design
            Only), Two- Way Finite Automata.
            Regular Grammar, Regular Expressions, Equivalence of regular
            expressions and NFA with epsilon transitions. Converting Regular Expressions to NFA with
            epsilon transitions Equivalence of DFA and
            regular expressions, converting DFA to Regular Expressions.
        </item>

        <item></item>
        <item>Pumping Lemma for Regular Languages, Applications of Pumping
            Lemma. Closure Properties of Regular sets (Proofs not required),
            Decision Problems related with Type 3 Formalism
            Type 2 Formalism:- Context-Free Languages (CFL), Context-Free
            Grammar (CFG), Derivation trees, Ambiguity, Simplification of
            CFG, Chomsky Normal Form, Greibach normal forms
        </item>

        <item></item>
        <item>Non-Deterministic Pushdown Automata (NPDA), design.
            Equivalence of acceptance by final state and empty stack in PDA.
            Equivalence between NPDA and CFG, Deterministic Push Down
            Automata, Closure properties of CFLs (Proof not required), Decision
            Problems related with Type 3 Formalism.
        </item>

        <item></item>
        <item>Pumping Lemma for CFLs, Applications of Pumping Lemma.
            Type 1 Formalism: Context-sensitive Grammar. Linear Bounded
            Automata (Design not required)
            Type 0 Formalism: Turing Machine (TM) – Basics and formal
            definition, TMs as language acceptors, TMs as Transducers,
            Designing Turing Machines.
        </item>

        <item></item>
        <item>Variants of TMs -Universal Turing Machine, Multi- tape TMs, Non
            Deterministic TMs, Enumeration Machine (Equivalence not
            required), Recursively Enumerable Languages, Recursive languages,
            Properties of Recursively Enumerable Languages and Recursive
            Languages, Decidability and Halting Problem. Chomsky Hierarchy
        </item>
    </array>


    <array name="cs303">

        <item>SYSTEM SOFTWARE</item>

        <item>Introduction</item>
        <item>System Software Vs. Application Software, Different System
            Software– Assembler, Linker, Loader, Macro Processor, Text Editor, Debugger, Device
            Driver, Compiler,
            Interpreter, Operating
            System(Basic Concepts only)
            SIC &amp; SIC/XE Architecture, Addressing modes, SIC &amp; SIC/XE
            Instruction set, Assembler Directives and Programming.
        </item>

        <item>Assemblers</item>
        <item>Basic Functions of Assembler. Assembler output format – Header,
            Text and End Records- Assembler data structures, Two pass
            assembler algorithm, Hand assembly of SIC/XE program, Machine
            dependent assembler features.
        </item>

        <item>Assembler design options</item>
        <item>Machine Independent assembler features – program blocks, Control
            sections, Assembler design options- Algorithm for Single Pass
            assembler, Multi pass assembler, Implementation example of MASM
            Assembler
        </item>

        <item>Linker and Loader</item>
        <item>Basic Loader functions - Design of absolute loader, Simple bootstrap
            Loader, Machine dependent loader features- Relocation, Program
            Linking, Algorithm and data structures of two pass Linking Loader,
            Machine dependent loader features, Loader Design Options.
        </item>

        <item>Macro Preprocessor</item>
        <item>Macro Instruction Definition and Expansion. One pass Macro
            processor Algorithm and data structures, Machine Independent Macro
            Processor Features, Macro processor design options
        </item>

        <item>Device drivers, Text Editors, Debuggers</item>
        <item>Device drivers:
            Anatomy of a device driver, Character and block device drivers,
            General design of device drivers\n\n
            Text Editors:
            Overview of Editing, User Interface, Editor Structure.\n\n
            Debuggers :-
            Debugging Functions and Capabilities, Relationship with other parts
            of the system, Debugging Methods- By Induction, Deduction and
            Backtracking.
        </item>
    </array>

    <array name="cs304">

        <item>CD</item>
        <item></item>
        <item>Introduction to compilers – Analysis of the source program, Phases of a compiler,
            Grouping of phases, compiler writing tools – bootstrapping Lexical Analysis: The role of
            Lexical Analyzer, Input Buffering, Specification of Tokens using Regular Expressions,
            Review of Finite Automata, Recognition of Tokens.
        </item>

        <item></item>
        <item>Syntax Analysis: Review of Context-Free Grammars – Derivation trees and Parse Trees,
            Ambiguity. Top-Down Parsing: Recursive Descent parsing, Predictive parsing, LL(1)
            Grammars.
        </item>

        <item></item>
        <item>Bottom-Up Parsing: Shift Reduce parsing – Operator precedence parsing (Concepts only)
            LR parsing – Constructing SLR parsing tables, Constructing, Canonical LR parsing tables
            and Constructing LALR parsing tables.
        </item>

        <item></item>
        <item>Syntax directed translation: Syntax directed definitions, Bottom- up evaluation of S-
            attributed definitions, L- attributed definitions, Top-down translation, Bottom-up
            evaluation of inherited attributes. Type Checking : Type systems, Specification of a
            simple type checker.
        </item>

        <item></item>
        <item>Run-Time Environments: Source Language issues, Storage organization, Storage-
            allocation strategies. Intermediate Code Generation (ICG): Intermediate languages –
            Graphical representations, ThreeAddress code, Quadruples, Triples. Assignment
            statements, Boolean expressions.
        </item>

        <item></item>
        <item>Code Optimization:Principal sources of optimization, Optimization of Basic blocks Code
            generation: Issues in the design of a code generator. The target machine, A simple code
            generator.
        </item>
    </array>

    <array name="cs305">

        <item>MP</item>

        <item></item>
        <item>Evolution of microprocessors, 8086 Microprocessor - Architecture and signals, Memory
            organisation, Minimum and maximum mode of operation, Minimum mode Timing Diagram.
            Comparison of 8086 and 8088.
        </item>

        <item></item>
        <item>8086 Addressing Modes, 8086 Instruction set and Assembler Directives - Assembly
            Language Programming with Subroutines, Macros, Passing Parameters, Use of stack.
        </item>

        <item></item>
        <item>Interrupts - Types of Interrupts and Interrupt Service Routine. Handling Interrupts in
            8086, Interrupt programming. Basic Peripherals and their Interfacing with 8086 -
            Programmable Interrupt Controller - 8259 - Architecture.
        </item>

        <item></item>
        <item>Interfacing Memory, I/O, 8255 - Detailed study - Architecture, Control word format and
            modes of operation, Architecture and modes of operation of 8279 and 8257 (Just mention
            the control word, no need to memorize the control word format)
        </item>

        <item></item>
        <item>Microcontrollers - Types of Microcontrollers - Criteria for selecting a
            microcontroller - Example Applications. Characteristics and Resources of a
            microcontroller. Organization and design of these resources in a typical microcontroller
            - 8051. 8051 Architecture, Register Organization, Memory and I/O addressing, Interrupts
            and Stack.
        </item>

        <item></item>
        <item>8051 Addressing Modes, Different types of instructions and Instruction Set, Simple
            programs. Peripheral Chips for timing control - 8254/8253
        </item>
    </array>

    <array name="cs306">

        <item>CN</item>

        <item></item>
        <item>Introduction – Uses – Network Hardware – LAN –MAN – WAN, Internetworks – Network
            Software – Protocol hierarchies – Design issues for the layers – Interface &amp; Service
            – Service Primitives. Reference models – OSI – TCP/IP.
        </item>

        <item></item>
        <item>Data Link layer Design Issues – Flow Control and ARQ techniques. Data link Protocols –
            HDLC. DLL in Internet. MAC Sub layer – IEEE 802 FOR LANs &amp; MANs, IEEE 802.3, 802.4,
            802.5. Bridges - Switches – High Speed LANs - Gigabit Ethernet. Wireless LANs - 802.11
            a/b/g/n, 802.15.PPP
        </item>

        <item></item>
        <item>Network layer – Routing – Shortest path routing, Flooding, Distance Vector Routing,
            Link State Routing, RIP, OSPF, Routing for mobile hosts.
        </item>

        <item></item>
        <item>Congestion control algorithms – QoS. Internetworking – Network layer in internet. IPv4
            - IP Addressing – Classless and Classfull Addressing. Sub-netting.
        </item>

        <item></item>
        <item>Internet Control Protocols – ICMP, ARP, RARP, BOOTP. Internet Multicasting – IGMP,
            Exterior Routing Protocols – BGP. IPv6 – Addressing – Issues, ICMPv6.
        </item>

        <item></item>
        <item>Transport Layer – TCP &amp; UDP. Application layer –FTP, DNS, Electronic mail, MIME,
            SNMP. Introduction to World Wide Web.
        </item>
    </array>
    <array name="cs362">

        <item>CV</item>

        <item></item>
        <item>Image formation and Image model- Components of a vision system- Cameras- camera model
            and camera calibration- Radiometry- Light in space- Light in surface - Sources, shadows
            and shading.
        </item>

        <item></item>
        <item>Multiple images-The Geometry of multiple views- Stereopsis- Affine structure from
            motion- Elements of Affine Geometry Affine structure and motion from two images- Affine
            structure and motion from multiple images- From Affine to Euclidean images.
        </item>

        <item></item>
        <item>High level vision- Geometric methods- Model based vision- Obtaining hypothesis by pose
            consistency, pose clustering and using Invariants, Verification.
        </item>

        <item></item>
        <item>Introduction to pattern and classification, supervised and unsupervised learning,
            Clustering Vs classification, Bayesian Decision Theory- Minimum error rate
            classification Classifiers, discriminant functions, decision surfaces- The normal
            density and discriminant-functions for the Normal density.
        </item>

        <item></item>
        <item>Linear discriminant based classifiers and tree classifiers Linear discriminant
            function based classifiers- Perceptron- Minimum Mean Squared Error (MME) method, Support
            Vector machine, Decision Trees: CART, ID3.
        </item>

        <item></item>
        <item>Unsupervised Methods Basics of Clustering; similarity / dissimilarity measures;
            clustering criteria. Different distance functions and similarity measures, K-means
            algorithm. Recent Advances in Pattern Recognition Neural network structures for pattern
            recognition, Pattern classification using Genetic Algorithms
        </item>
    </array>

    <array name="cs302">

        <item>DAA</item>

        <item></item>
        <item>Introduction to Algorithm AnalysisTime and Space Complexity- Elementary operations and
            Computation of Time Complexity- Best, worst and Average Case Complexities- Complexity
            Calculation of simple algorithms Recurrence Equations:Solution of Recurrence Equations –
            Iteration Method and Recursion Tree Methods
        </item>

        <item></item>
        <item>Master’s Theorem(Proof not required) – examples, Asymptotic Notations and their
            properties- Application of Asymptotic Notations in Algorithm Analysis- Common Complexity
            Functions AVL Trees – rotations, Red-Black Trees insertion and deletion (Techniques
            only; algorithms not expected). B-Trees – insertion and deletion operations. Sets- Union
            and find operations on disjoint sets.
        </item>

        <item></item>
        <item>Graphs – DFS and BFS traversals, complexity, Spanning trees – Minimum Cost Spanning
            Trees, single source shortest path algorithms, Topological sorting, strongly connected
            components.
        </item>

        <item></item>
        <item>Divide and Conquer:The Control Abstraction, 2 way Merge sort, Strassen’s Matrix
            Multiplication, Analysis Dynamic Programming : The control Abstraction- The Optimality
            Principle- Optimal matrix multiplication, Bellman-Ford Algorithm
        </item>

        <item></item>
        <item>Analysis, Comparison of Divide and Conquer and Dynamic Programming strategies Greedy
            Strategy: - The Control Abstraction- the Fractional Knapsack Problem, Minimal Cost
            Spanning Tree Computation- Prim’s Algorithm – Kruskal’s Algorithm.
        </item>

        <item></item>
        <item>Back Tracking: -The Control Abstraction – The N Queen’s Problem, 0/1 Knapsack Problem
            Branch and Bound:Travelling Salesman Problem. Introduction to Complexity Theory
            :-Tractable and Intractable Problems- The P and NP Classes- Polynomial Time Reductions -
            The NP- Hard and NP-Complete Classes
        </item>
    </array>
    <array name="cs307">

        <item>DC</item>

        <item></item>
        <item>Data Transmission: Communication model Simplex, half duplex and full duplex
            transmission - Periodic Analog signals: Sine wave, phase, wavelength, time and frequency
            domain, bandwidth - Digital Signals; Digital data Transmission:- Analog &amp; Digital
            data, Analog &amp; Digital signals, Analog &amp;Digital transmission – Transmission
            Impairments: Attenuation, Delay distortion, Noise - Channel capacity: Nyquist Bandwidth,
            Shannon\'s Capacity formula.
        </item>

        <item></item>
        <item>Transmission media - Guided Transmission Media: Twisted pair, Coaxial cable, optical
            fiber, Wireless Transmission, Terrestrial microwave, Satellite microwave. Wireless
            Propagation: Ground wave propagation, Sky Wave propagation, LoS Propagation.
        </item>

        <item></item>
        <item>Signal Encoding techniques - Digital Data Digital Signals: NRZ, Multilevel binary,
            Biphase - Digital Data Analog Signals : ASK, FSK, PSK - Analog Data Digital Signals:
            Sampling theorem, PCM, Delta Modulation - Analog Data Analog Signals: AM, FM, PM.
        </item>

        <item></item>
        <item>Multiplexing- Space Division Multiplexing-Frequency Division Multiplexing: Wave length
            Division Multiplexing - Time Division multiplexing: Characteristics, Digital Carrier
            system, SONET/SDHStatistical time division multiplexing: Cable Modem - Code Division
            Multiplexing. Multiple Access– CDMA.
        </item>

        <item></item>
        <item>Digital Data Communication Techniques - Asynchronous transmission, Synchronous
            transmission-Detecting and Correcting Errors-Types of Errors-Error Detection: Parity
            check, Cyclic Redundancy Check (CRC) - Error Control Error Correction: Forward Error
            Correction and Hamming Distance.
        </item>

        <item></item>
        <item>Spread Spectrum Techniques-Direct Sequence Spread Spectrum (DSSS), Frequency Hopping
            Spread Spectrum (FHSS). Basic principles of switching - Circuit Switched Networks,
            Structure of Circuit Switch - Packet Switching: Datagram Networks, Virtual Circuit
            Networks, Structure of packet switches
        </item>
    </array>


    <array name="cs369">
        <item>DST</item>

        <item></item>
        <item>Fundamentals of Testing: Testing &amp; Diagnosis, testing at different levels of
            abstraction, errors &amp; faults, modeling &amp; evaluation,types of testing, test
            generation Modeling: Functional modeling at logic level, functional modeling at register
            level &amp; structural models.
        </item>

        <item></item>
        <item>Fault Modeling : Logic fault models, Fault detection and redundancy, Fault equivalence
            &amp; fault location, fault dominance, single stuck faults, multiple stuck fault models
            .
        </item>

        <item></item>
        <item>Logic &amp; fault Simulation: Simulationfor verification&amp; test evaluation, types
            of simulation – compiled code &amp; Event driven, serial fault simulation, statistical
            method for fault simulation.
        </item>

        <item></item>
        <item>Combinational circuit test generation: ATG for SSFs in combinational circuits – fault
            oriented ATG- fault independent ATG- random test generation, Sensitized path,
            D-algorithm, PODEM and FAN.
        </item>

        <item></item>
        <item>Sequential circuit test generation: ATPG for single clock synchronous circuits, time
            frame expansion method, simulation based sequential circuit ATPG – genetic algorithm.
        </item>

        <item></item>
        <item>Design for Testability: introduction to testability, design for testability
            techniques, controllability and observability by means of scan registers, generic scan
            based designs – scan path, boundary scan, Introduction to BIST.
        </item>
    </array>

    <array name="cs309">
        <item>GTC</item>

        <item></item>
        <item>Introductory concepts - What is graph – Application of graphs – finite and infinite
            graphs – Incidence and Degree – Isolated vertex, pendent vertex and Null graph. Paths
            and circuits – Isomorphism, sub graphs, walks, paths and circuits, Connected graphs,
            disconnect graphs.
        </item>

        <item></item>
        <item>Euler graphs, Hamiltonian paths and circuits, Dirac\'s theorem for Hamiltonicity,
            Travelling salesman problem. Directed graphs – types of digraphs, Digraphs and binary
            relation
        </item>

        <item></item>
        <item>Trees – properties, pendent vertex, Distance and centres - Rooted and binary tree,
            counting trees, spanning trees.
        </item>

        <item></item>
        <item>Vertex Connectivity, Edge Connectivity, Cut set and Cut Vertices, Fundamental
            circuits, Planar graphs, Different representation of planar graphs, Euler\'s
            theorem, Geometric dual, Combinatorial dual.
        </item>

        <item></item>
        <item>Matrix representation of graphs- Adjacency matrix, Incidence Matrix, Circuit matrix,
            Fundamental Circuit matrix and Rank, Cut set matrix, Path matrix
        </item>

        <item></item>
        <item>Graphs theoretic algorithms - Algorithm for computer representation of a graph,
            algorithm for connectedness and components, spanning tree, shortest path.
        </item>
    </array>

    <array name="cs372">

        <item>HPC</item>

        <item></item>
        <item>Modern Processors : Stored Program Computer Architecture- General purpose cache- based
            microprocessor-Performance based metrics and benchmarks- Moore\'s Law- Pipelining-
            SuperscalaritySIMD- Memory Hierarchies Cache- mapping- prefetch- Multicore processors-
            Mutithreaded processors- Vector Processors- Design Principles- Maximum performance
            estimates- Programming for vector architecture.
        </item>

        <item></item>
        <item>Basic optimization techniques for serial code : scalar profiling- function and line
            based runtime profiling- hardware performance counters- common sense optimizations-
            simple measures, large impact- elimination of common subexpressions- avoiding branches-
            using simd instruction sets- the role of compilers - general optimization options-
            inlining - aliasing- computational accuracy- register optimizations- using compiler
            logs- c++ optimizations - temporaries- dynamic memory management- loop kernels and
            iterators data access optimization: balance analysis and light speed estimates- storage
            order- case study: jacobi algorithm and dense matrix transpose.
        </item>

        <item></item>
        <item>Parallel Computers : Taxonomy of parallel computing paradigms- Shared memory
            computers- Cache coherance- UMA - ccNUMA- Distributed-memory computers- Hierarchical
            systems- Networks- Basic performance characteristics- Buses- Switched and fat- tree
            networks- Mesh networks- Hybrids - Basics of parallelization - Why parallelize - Data
            Parallelism - Function Parallelism- Parallel Scalability- Factors that limit parallel
            execution- Scalability metrics- Simple scalability laws- parallel efficiency - serial
            performance Vs Strong scalability- Refined performance models- Choosing the right
            scaling baseline- Case Study: Can slow processors compute faster- Load balance.
        </item>

        <item></item>
        <item>Distributed memory parallel programming with MPI : message passing - introduction to
            MPI – example - messages and point-topoint communication - collective communication –
            nonblocking point-to-point communication- virtual topologies - MPI parallelization of
            Jacobi solver- MPI implementation - performance properties
        </item>

        <item></item>
        <item>Shared memory parallel programming with OpenMp : introduction to OpenMp - parallel
            execution - data scoping- OpenMp work sharing for loops- synchronization - reductions -
            loop scheduling - tasking - case study: OpenMp- parallel jacobi algorithm- advanced
            OpenMpwavefront parallelization- Efficient OpenMP programming: Profiling OpenMP programs
            - Performance pitfalls- Case study: Parallel Sparse matrix-vector multiply.
        </item>

        <item></item>
        <item>Efficient MPI programming : MPI performance tools- communication parameters-
            Synchronization, serialization, contention- Reducing communication overhead- optimal
            domain decomposition- Aggregating messages – Nonblocking Vs Asynchronous communication-
            Collective communication- Understanding intra-node point-to-point communication.
        </item>
    </array>

    <array name="cs361">

        <item>SOFT COMPUTING</item>

        <item></item>
        <item>Introduction to Soft Computing
            Artificial neural networks - biological neurons, Basic models of
            artificial neural networks – Connections, Learning, Activation
            Functions, McCulloch and Pitts Neuron, Hebb network.
        </item>

        <item></item>
        <item>Perceptron networks – Learning rule – Training and testing
            algorithm, Adaptive Linear Neuron, Back propagation Network –
            Architecture, Training algorithm
        </item>

        <item></item>
        <item>Fuzzy logic - fuzzy sets - properties - operations on fuzzy sets,
            fuzzy relations - operations on fuzzy relations
        </item>

        <item></item>
        <item>Fuzzy membership functions, fuzzification, Methods of membership
            value assignments – intuition – inference – rank ordering, Lambda –
            cuts for fuzzy sets, Defuzzification methods
        </item>

        <item></item>
        <item>Truth values and Tables in Fuzzy Logic, Fuzzy propositions,
            Formation of fuzzy rules - Decomposition of rules – Aggregation of
            rules, Fuzzy Inference Systems - Mamdani and Sugeno types,
            Neuro-fuzzy hybrid systems – characteristics - classification
        </item>

        <item></item>
        <item>Introduction to genetic algorithm, operators in genetic algorithm -
            coding - selection - cross over – mutation, Stopping condition for
            genetic algorithm flow, Genetic-neuro hybrid systems, Genetic-
            Fuzzy rule based system
        </item>
    </array>

    <array name="cs363">

        <item>SS</item>

        <item></item>
        <item>Signals and systems – introduction – basic operations on signals –
            continuous time and discrete time signals –step, impulse, ramp,
            exponential and sinusoidal functions.
        </item>

        <item></item>
        <item>Continuous time and discrete time systems –properties of systems
            – linearity, causality, time invariance, memory, stability,
            invertibility. Linear time invariant systems – convolution.
        </item>

        <item></item>
        <item>Z-transform – region of convergence – properties of Z-transform –
            inverse Z-transform. Fourier transform (FT) of discrete time
            signals – properties of FT – relation between Z-transform and FT.
        </item>

        <item></item>
        <item>Discrete Fourier transform (DFT) - Properties of DFT – inverse
            DFT - Fast Fourier transform (FFT) - Radix-2 FFT algorithms –
            butterfly structure.
        </item>

        <item></item>
        <item>Digital filter structures – block diagram and signal flow graph
            representation – structures for IIR – direct form structure –
            Cascade form structure – parallel form structure – lattice structure.
        </item>

        <item></item>
        <item>Structures for FIR – direct form structures – direct form structure
            of linear phase system – cascade form structure – frequency
            sampling structure – lattice structure
        </item>
    </array>


    <array name="cs365">

        <item>OT</item>

        <item></item>
        <item>Decision-making procedure under certainty and under uncertainty -
            Operations Research-Probability and decision- making- Queuing or
            Waiting line theory-Simulation and Monte- Carlo Technique- Nature
            and organization of optimization problems- Scope and hierarchy of
            optimization- Typical applications of optimization.
        </item>

        <item></item>
        <item>Essential features of optimization problems - Objective functionContinuous
            functions - Discrete functions - Unimodal functions -
            Convex and concave functions, Investment costs and operating costs
            in objective function - Optimizing profitably constraints-Internal and
            external constraints-Formulation of optimization problems.
            Continuous functions - Discrete functions - Unimodal functions -
            Convex and concave functions.
        </item>

        <item></item>
        <item>Necessary and sufficient conditions for optimum of unconstrained
            functions-Numerical methods for unconstrained functions - Onedimensional
            search - Gradient-free search with fixed step size. Linear
            Programming - Basic concepts of linear programming - Graphical
            interpretation-Simplex method - Apparent difficulties in the Simplex
            method.
        </item>

        <item></item>
        <item>Transportation Problem, Loops in transportation table, Methods of
            finding initial basic feasible solution, Tests for optimality. Assignment
            Problem, Mathematical form of assignment problem, methods of
            solution.
        </item>

        <item></item>
        <item>Network analysis by linear programming and shortest route, maximal
            flow problem. Introduction to Non-traditional optimization,
            Computational Complexity – NP-Hard, NP-Complete. Tabu SearchBasic
            Tabu search, Neighborhood, Candidate list, Short term and
            Long term memory
        </item>

        <item></item>
        <item>Genetic Algorithms- Basic concepts, Encoding, Selection, Crossover,
            Mutation. Simulated Annealing - Acceptance probability, Cooling,
            Neighborhoods, Cost function. Application of GA and Simulated
            Annealing in solving sequencing and scheduling problems and
            Travelling salesman problem
        </item>
    </array>

    <array name="cs367">

        <item>LCS</item>

        <item></item>
        <item>Introductory Concepts: Mathematical Logic, Propositional Logic,
            First Order Logic, Modal and Temporal logic, Program
            Verification. (Reading: Ben-Ari, Chapter 1)
            Propositional Logic: Formulae and interpretations, Equivalence,
            Satisfiability&amp; Validity, Semantic Tableaux, Soundness and
            Completeness. (Reading: Ben-Ari, Chapter 2 except 2.4,
            Additional Reading : Singh, Chapter 1)
        </item>

        <item></item>
        <item>The Hilbert Deductive System, Derived Rules, Theorems and
            operators, Soundness and Completeness, Consistency. (Reading:
            Ben-Ari, Chapter 3 except 3.7 and 3.8, Additional Reading :
            Singh, Chapter 1)
            Resolution in Propositional Logic: Conjunctive Normal form,
            Clausal form, resolution rule. (Reading: Ben-Ari, Chapter 4.1,
            4,2, 4.3, Additional Reading : Singh, Chapter 1)
        </item>

        <item></item>
        <item>Binary Decision Diagrams: Definition, Reduced and ordered BDD,
            Operators. (Reading: Ben-Ari, Chapter 5.1 – 5.5)
            Predicate Logic: Relations, predicates, formulae and interpretation,
            logical equivalence, semantic tableaux, soundness.Reading: BenAri,
            Chapter 7.1-7.6, Additional Reading : Singh, Chapter 2)
        </item>

        <item></item>
        <item>The Hilbert deduction system for predicate logic. Functions, PCNF
            and clausal form, Herbrand model. Resolution in predicate logic:
            ground resolution, substitution, unification, general resolution.
            Reading: Ben-Ari, Chapter 8.1-8.4, 9.1, 9.3, 10.1-10.4,
            Additional Reading : Singh, Chapter 2, Chapter 3)
        </item>

        <item></item>
        <item>Temporal logic: Syntax and semantics, models of time, linear time
            temporal logic, semantic tableaux.
            Deduction system of temporal logic.
            (Reading: Ben-Ari, Chapter 13.1-13.5, 14.1-14.2)
        </item>

        <item></item>
        <item>Program Verification: Need for verification, Framework for
            verification, Verification of sequential programs, deductive system,
            verification, synthesis.
            (Reading: Ben-Ari, Chapter 15.1-15.4, Additional Reading :
            Singh, Chapter 5)
            Modal Logic: Need for modal logic, Case Study: Syntax and
            Semantics of K, Axiomatic System KC,
            (Reading: Singh, Chapter 6.1-6.3)
        </item>
    </array>
</resources>